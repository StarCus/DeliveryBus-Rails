<div class="new-order-bar navbar-fixed-top" style="">
  <form accept-charset="UTF-8" action="/orders" class="new_order" id="new_order" method="post">
    <div style="display:none">
      <input name="authenticity_token" type="hidden" value="<%= form_authenticity_token %>" />
    </div>
    
    <ul class="nav navbar-nav orderbar-list">
      <li class="extra-long-item">
        <label>地址</label>
        <br>
        <!-- <input id="order_address" name="order[address]" type="text"> -->
        <div class="sw-widget">
          <select id="order_address" name="address[id]" type="text">
            <option value="">Select one...</option>
            <% @addresses.each do |address| %>
              <option value="<%= address.id %>"><%= address.name %></option>
            <% end %>
          </select>
        </div>
      </li>
      <li class="">
        <label>数量</label>
        <br>
        <input id="order_amount" name="order[amount]" type="number" min="0" max="20">
      </li>
      <li class="">
        <span>
          <input id="order_payment_online" name="order[payment_method]" type="radio" value="online">在线支付<br>
        </span>
        <span>
          <input id="order_payment_cash" name="order[payment_method]" type="radio" value="cash">现金支付
        </span>
      </li>
      <li>
        <label>价格</label>
        <br>
        <input id="order_price" name="order[price]" type="text">
      </li>
      <li>
        <input name="commit" type="submit" value="确定" style="margin-top: 20px;">        
      </li>
      <li>
        <a class="button" href="/orders">重置</a>
      </li>   
    </ul>
  </form>
</div>

<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
    /*width: 130px;*/
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
    z-index: 99999;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
</style>
<script>
  (function($) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" );
        var value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .attr("name", "address[name]")
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechaange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "显示地址列表" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      // _removeIfInvalid: function( event, ui ) {
 
      //   // Selected an item, nothing to do
      //   if ( ui.item ) {
      //     return;
      //   }
 
      //   // Search for a match (case-insensitive)
      //   var value = this.input.val(),
      //     valueLowerCase = value.toLowerCase(),
      //     valid = false;
      //   this.element.children( "option" ).each(function() {
      //     if ( $( this ).text().toLowerCase() === valueLowerCase ) {
      //       this.selected = valid = true;
      //       return false;
      //     }
      //   });
 
      //   // Found a match, nothing to do
      //   if ( valid ) {
      //     return;
      //   }
 
      //   // Remove invalid value
      //   this.input
      //     .val( "" )
      //     .attr( "title", value + " didn't match any item" )
      //     .tooltip( "open" );
      //   this.element.val( "" );
      //   this._delay(function() {
      //     this.input.tooltip( "close" ).attr( "title", "" );
      //   }, 2500 );
      //   this.input.autocomplete( "instance" ).term = "";
      // },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })($);
 
  $(function() {
    $( "#order_address" ).combobox();

    // $("#order_payment_online").change(function() {
    //   $("#order_price").prop('disabled', true);
    //   $("#order_price").prop('value', '---');
    // });

    // $("#order_payment_cash").change(function() {
    //   $("#order_price").prop('disabled', false);
    //   $("#order_price").prop('value', '');
    // });
  });
  </script>
